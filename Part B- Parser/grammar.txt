S -> GLOBALS FUNCTIONS { STATEMENTS }

GLOBALS -> DECLARATIONS

FUNCTIONS -> FUNCTION FUNCTIONS
FUNCTIONS -> ''
FUNCTION -> def DATATYPE id ( PARAMETERS ) { STATEMENTS RETURN }

DECLARATIONS -> DEFINITION ASSIGNMENT DECLARATIONS
DECLARATIONS -> ''

DEFINITION -> DATATYPE id
DEFINITION -> ''

ASSIGNMENT -> id = SEQ
ASSIGNMENT -> ''

PARAMETERS -> DEFINITION C PARAMETERS
PARAMETERS -> ''

C -> ,
C -> ''

DATATYPE -> int
DATATYPE -> float
DATATYPE -> char
DATATYPE -> string

RETURN -> return SEQ

STATEMENTS -> STATEMENT STATEMENTS
STATEMENTS -> ''

STATEMENT -> SEQ
STATEMENT -> COND
STATEMENT -> LOOP
STATEMENT -> FUNC_CALL
STATEMENT -> ARRAYDECLARATION
STATEMENT -> ARRAYACCESS
STATEMENT -> ARRAYINITIALIZATION
STATEMENT -> IO
STATEMENT -> DECLARATIONS

SEQ -> ARITH
SEQ -> RELATIONAL
SEQ -> ''

ARITH -> E

E -> T E'

E' -> + T E'
E' -> ''

T -> F T'

T' -> * F T'
T' -> ''

F -> id

FUNC_CALL -> call ( id ( idLIST ) id )

idLIST -> id C idLIST
idLIST -> ''

IO -> INPUT
IO -> OUTPUT

INPUT -> in idLIST

OUTPUT -> out SEQ

COND -> if ( RELATIONAL ) { STATEMENTS } else { STATEMENTS }

LOOP -> for ( id ; RELATIONAL ; id = ARITH ) { STATEMENTS }

ARRAYDECLARATION -> arrayd ( id , id )

ARRAYACCESS -> arraya ( id , id , id )

ARRAYINITIALIZATION -> arrayi ( id , id , ARITH )

RELATIONAL -> ARITH OPERATOR ARITH

OPERATOR -> <=
OPERATOR -> >=
OPERATOR -> <
OPERATOR -> >
OPERATOR -> ==
OPERATOR -> +
OPERATOR -> -
OPERATOR -> *
OPERATOR -> /
OPERATOR -> ''